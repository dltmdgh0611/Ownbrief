// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  podcasts      Podcast[]
  userSettings  UserSettings?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Podcast {
  id              String    @id @default(cuid())
  title           String
  description     String?
  audioUrl        String?
  duration        Int?      // duration in seconds
  status          String    @default("pending") // pending, processing, completed, failed
  script          String
  userId          String
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  publishedAt     DateTime? // 공개 예정 시간
  isAutoGenerated Boolean   @default(false) // 자동 생성 여부
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model UserSettings {
  id                   String    @id @default(cuid())
  userId               String    @unique
  user                 User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  selectedPlaylists    String[]  // 선택한 유튜브 플레이리스트 ID 배열
  interests            String[]  // 관심 키워드 배열
  onboardingCompleted  Boolean   @default(false) // 온보딩 완료 여부
  deliveryTimeHour     Int       @default(8) // 팟캐스트 받을 시간 (0-23)
  deliveryTimeMinute   Int       @default(0) // 팟캐스트 받을 분 (0-59)
  lastDeliveryTimeUpdate DateTime? // 마지막 배달 시간 수정 시각
  credits              Int       @default(15) // 남은 크레딧 수
  isAdmin              Boolean   @default(false) // 관리자 권한
  referralCode         String?   @unique // 사용자 고유 추천인 코드 (8자 영숫자)
  referredBy           String?   // 추천인 코드 (누가 이 사용자를 초대했는지)
  referralCount        Int       @default(0) // 추천한 사람 수
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
}
